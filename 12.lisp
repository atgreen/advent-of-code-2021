;;; Advent Of Code 2021 - Day 12 - Anthony Green <green@moxielogic.com>

(let ((map (make-hash-table :test #'equal))
      (visited (list)))
  (dolist (path (mapcar (lambda (l)
                          (uiop:split-string l :separator "-"))
                        (uiop:read-file-lines "12.input")))
    (setf (gethash (car path) map) (cons (cadr path) (gethash (car path) map)))
    (setf (gethash (cadr path) map) (cons (car path) (gethash (cadr path) map))))
  (labels ((dfs (to twice?)
             (let ((already? (and (string= to (string-downcase to))
                                  (find to visited :test #'string=))))
               (cond
                 ((equal to "end") 1)
                 ((equal to "start") 0)
                 ((and already? twice? 0))
                 (t (push to visited)
                    (loop for next in (gethash to map)
                          sum (dfs next (or twice? already?))
                          finally (pop visited)))))))
    (print (loop for next in (gethash "start" map)
                 sum (dfs next t)))
    (print (loop for next in (gethash "start" map)
                 sum (dfs next nil)))))
